<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:mvc="http://www.springframework.org/schema/mvc" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:jpa="http://www.springframework.org/schema/data/jpa"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="
	    http://www.springframework.org/schema/mvc 
        http://www.springframework.org/schema/mvc/spring-mvc.xsd
        http://www.springframework.org/schema/beans 	
        http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context 
        http://www.springframework.org/schema/context/spring-context.xsd
        http://www.springframework.org/schema/data/jpa
        http://www.springframework.org/schema/data/jpa/spring-jpa.xsd
        http://www.springframework.org/schema/tx
        http://www.springframework.org/schema/tx/spring-tx.xsd">

	<mvc:annotation-driven /> <!-- Habilita o suporte a JSR 303 -->

	<mvc:resources location="/WEB-INF/resources/" mapping="/resources/**"></mvc:resources> <!-- Mapeamento dos recursos para o Spring não se perder na hora de carregar 
		os recursos adicionados -->

	<context:component-scan base-package="br.com.treinaweb.springmvc.controllers" />

	<bean id="viewResolver"
		class="org.springframework.web.servlet.view.UrlBasedViewResolver">
		<property name="viewClass"
			value="org.springframework.web.servlet.view.tiles3.TilesView"></property>
	</bean>

	<bean id="tilesConfigurer"
		class="org.springframework.web.servlet.view.tiles3.TilesConfigurer">
		<property name="definitions">
			<list>
				<value>/WEB-INF/tiles.xml</value>
			</list>
		</property>
	</bean>
	<!-- Fábrica de objetos validadores, responsável por instanciar objetos 
		de validação com base nas configurações Fará a detecção da validation api 
		no classpath da aplicação e também a implementação, nesse caso o hibernate 
		validator -->
	<bean id="validator"
		class="org.springframework.validation.beanvalidation.LocalValidatorFactoryBean" />

	<!-- Spring Data -->

	<!-- Bean responsável por fabricar conexões com o banco de dados -->
	<bean id="dataSource" class="org.apache.commons.dbcp2.BasicDataSource"
		destroy-method="close">
		<property name="driverClassName" value="com.mysql.jdbc.Driver"></property>
		<property name="url"
			value="jdbc:mysql://localhost:3306/treinawebspring?useTimezone=true&amp;serverTimezone=UTC"></property>
		<property name="username" value="root"></property>

	</bean>

	<!-- Mapeamento do banco de dados -->
	<bean id="entityManagerFactory"
		class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
		<property name="dataSource" ref="dataSource"></property> <!-- ref - faz referência a outro Bean, no caso o dataSource para gerenciar 
			as conexões com o banco -->
		<property name="packagesToScan" value="br.com.treinaweb.springmvc.dominios"></property> <!-- Escaneia qual o pacote que contém as classes anotadas com JPA para entidades -->
		<property name="jpaVendorAdapter">
			<bean class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter"></bean>
		</property>
		<property name="jpaProperties">
			<props>
				<prop key="hibernate.dialect">org.hibernate.dialect.MySQL5Dialect</prop>
				<prop key="hibernate.show_sql">true</prop>
				<prop key="hibernate.hbm2ddl.auto">update</prop>
			</props>
		</property>
	</bean>
	<!-- Transações com o banco de dados -->
	<bean id="transactionManager" class="org.springframework.orm.jpa.JpaTransactionManager">
		<property name="entityManagerFactory" ref="entityManagerFactory"></property>
	</bean>
	<jpa:repositories base-package="br.com.treinaweb.springmvc.repositorios"></jpa:repositories>
</beans>
		